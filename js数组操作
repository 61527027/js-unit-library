js数组赋值：不修改原数组，返回新的数组 。
有一个数组arr = [1, 2, 3, 4, 10]。 
var str = new Array;

str = arr; //这个不是赋值，将数组arr的引用赋给str，所以改变str也会改变arr （js实际创建的str是一个对象）；

正确赋值： 
1、str = [].concat(arr); 
content用于连接多个数组：arr1.concat(arr2,arr3，。。。。)

2、str=arr.slice(0); 
返回一个新数组，从0到最后。 
（slice有两个参数：xx.slice(start,end),返回数组xx下标从start到end的元素。若未定义end则返回start到结尾。）

3、数组里的元素是对象时 str=[{"a":1},{"b":2}];
当你传递对象的时候，其实传递的只是引用，实际地址指向的都是一个对象，所以更改会影响原对象
你如果想让它成为单独的不受引用关系影响的，深度复制它即可
